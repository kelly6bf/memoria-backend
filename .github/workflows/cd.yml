name: Extract PR Metadata

on:
  pull_request:
    types: [opened, synchronize, reopened]  # PR 열리거나 업데이트될 때
    branches:
      - main         # main 브랜치 대상

jobs:
  deploy-check:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.get_pr.outputs.should_deploy }}
      assignees: ${{ steps.get_pr.outputs.assignees }}
    steps:
      - name: Get PR metadata
        id: get_pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const labels = pr.data.labels.map(label => label.name);
            const assignees = pr.data.assignees.map(user => user.login);

            const hasDeployLabel = labels.includes("deploy");
            const hasAssignees = assignees.length > 0;
            const shouldDeploy = hasDeployLabel && hasAssignees;

            core.setOutput("should_deploy", shouldDeploy ? "true" : "false");
            core.setOutput("has_deploy_label", hasDeployLabel);
            core.setOutput("assignees", assignees.join(', '));
            core.setOutput("has_assignees", hasAssignees ? "true" : "false");

      - name: Explain deploy decision
        run: |
          echo "🔍 Checking deploy conditions..."

          if [[ "${{ steps.get_pr.outputs.should_deploy }}" == "true" ]]; then
            echo "🚚 deploy label이 존재하므로 배포 작업을 진행합니다."
          elif [[ "${{ steps.get_pr.outputs.has_deploy_label }}" == "false" ]]; then
            echo "✋ deploy label이 없으므로 배포 작업을 수행하지 않고 종료합니다."
          else
            echo "⛔️ 배포 PR에는 꼭 Assignees가 설정되어 있어야 합니다!"
          fi

  deploy:
    needs: deploy-check
    if: needs.deploy-check.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Print context
        run: |
          echo "Pull Request #${{ github.event.pull_request.number }} is targeting main branch."

      - name: Print PR Info
        run: |
          echo "PR Number: ${{ github.event.pull_request.number }}"
          echo "PR URL: ${{ github.event.pull_request.html_url }}"

      - name: Show PR Assignees
        run: |
          echo "Assignees: ${{ needs.deploy-check.outputs.assignees }}"

      - name: Show deploy action
        run: |
          echo "🚀 Deploying because 'deploy' label was found and assignee exists."