name: Extract PR Metadata

on:
  pull_request:
    types: [opened, synchronize, reopened]  # PR 열리거나 업데이트될 때
    branches:
      - main         # main 브랜치 대상

jobs:
  check-deploy-decision:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check_deploy_decision.outputs.should_deploy }}
      assignees: ${{ steps.check_deploy_decision.outputs.assignees }}
    steps:
      - name: Check deploy decision
        id: check_deploy_decision
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            
            const hasDeployLabel = pr.data.labels.map(label => label.name).includes("deploy");
            let assignees = pr.data.assignees.map(user => user.login);
            if (assignees.length > 0) {
              assignees = assignees.join(', ');
            } else {
              assignees = context.payload.pull_request.user.login;
            }
            
            core.setOutput("should_deploy", hasDeployLabel ? "true" : "false");
            core.setOutput("assignees", assignees);

      - name: Explain deploy decision
        run: |
          if [[ "${{ steps.check_deploy_decision.outputs.should_deploy }}" == "true" ]]; then
            echo "🚚 deploy label이 존재하므로 배포 작업을 진행합니다."
          else
            echo "✋ deploy label이 없으므로 배포 작업을 수행하지 않고 종료합니다."
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: [ check-deploy-decision ]
    if: needs.check-deploy-decision.outputs.should_deploy == 'true'
    outputs:
      deploy_result: ${{ steps.deploy_result.outputs.deploy_result }}
    steps:
      - name: Show deploy action
        id: deploy_result
        run: |
          echo "🚀 Deploying because 'deploy' label was found and assignee exists."
          echo "deploy_result=success" >> $GITHUB_OUTPUT

  notify:
    runs-on: ubuntu-latest
    needs: [ check-deploy-decision, deploy ]
    steps:
      - name: Send deploy success notification
        if: needs.deploy.outputs.deploy_result == 'success'
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-color: 3066993
          embed-title: "🎉 BE 배포 성공 알림! (dev)"
          embed-description: |
            오늘은 생맥 ㅎ 🍺
            
            - 작업자 : ${{ needs.check-deploy-decision.outputs.assignees }}
            - PR : ${{ github.event.pull_request.html_url }}
            - Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      - name: Send deploy fail notification
        if: needs.deploy.outputs.deploy_result == 'fail'
        uses: tsickert/discord-webhook@v7.0.0
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-color: 15158332
          embed-title: "❌ BE 배포 실패 알림ㅜ (dev)"
          embed-description: |
            집에 보내줘... 🌛
            
            - 작업자 : ${{ needs.check-deploy-decision.outputs.assignees }}
            - PR : ${{ github.event.pull_request.html_url }}
            - Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
